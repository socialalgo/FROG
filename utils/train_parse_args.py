# -*- coding: utf-8 -*-
import argparse

def parse_args():
    """argument parser for model training"""

    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--file_path",
        default='',
        type=str,
    )
    parser.add_argument(
        "--data_input",
        type=str,
    )
    parser.add_argument(
        "--model_version",
        type=str,
        default="v1"
    )
    parser.add_argument(
        "--num_epochs",
        default=500,
        type=int,
    )
    parser.add_argument(
        "--data_mode",
        default="local",
        type=str,
    )
    parser.add_argument(
        "--eta",
        default=3e-4,
        type=float,
    )
    parser.add_argument(
        "--learning_decay",
        default=5e-4,
        type=float,
    )
    parser.add_argument(
        "--batch_size",
        default=1024,
        type=int,
    )
    parser.add_argument(
        "--model_path",
        default='',
        type=str,
    )
    parser.add_argument(
        "--lr_decay_steps",
        default=5.0,
        type=float,
    )
    parser.add_argument(
        "--lr_decay_rate",
        default=0.8,
        type=float,
    )
    parser.add_argument(
        "--bestmodel_name",
        default="bestmodel",
        type=str,
    )
    parser.add_argument(
        "--attention_num",
        default=3,
        type=int,
    )
    parser.add_argument(
        "--embed_dim",
        default=8,
        type=int,
    )
    parser.add_argument(
        "--n_heads",
        default=2,
        type=int,
    )
    parser.add_argument(
        "--head_dim",
        default=4,
        type=int,
    )
    parser.add_argument(
        "--hidden_units",
        default=[233*2,233,64],
        type=list,
    )
    parser.add_argument(
        "--num_fea_size",
        default=150,
        type=int,
    )
    parser.add_argument(
        "--dataset",
        default="hp",
        type=str,
    )
    parser.add_argument(
        "--l2_weight",
        default=0.0001,
        type=float,
    )
    parser.add_argument(
        "--loss_func",
        default="focal_loss ",
        type=str,
    )
    parser.add_argument(
        "--L2_regularization",
        default=0.0,
        type=float,
    )
    parser.add_argument(
        "--L1_regularization",
        default=2e-4,
        type=float,
    )
    parser.add_argument(
        "--evaluate_offline",
        default=False,
        type=bool,
    )
    parser.add_argument(
        "--metric_rank",
        default=20,
        type=int,
    )
    parser.add_argument(
        "--metric_type",
        default="",
        type=str,
    )
    parser.add_argument(
        "--pretrain_path",
        default="",
        type=str,
    )
    parser.add_argument(
        "--l_activation",
        default="",
        type=str,
    )

    parser.add_argument(
        "--AutoFIS_mask",
        default=[1,1,1,1,1],
        type=list,
    )
    parser.add_argument(
        "--mod_list",
        default="0123",
        type=str,
    )
    parser.add_argument(
        "--pretrain",
        default=False,
        type=bool,
    )
    parser.add_argument(
        "--grda_lr",
        default=1.0,
        type=float,
    )
    parser.add_argument(
        "--training",
        default=False,
        type=bool,
    )
    parser.add_argument(
        "--mod_split_str",
        default="",
        type=str,
    )
    parser.add_argument(
        "--imp_mod_num",
        default=2,
        type=int,
    )
    parser.add_argument(
        "--attention_activation",
        default="mask_relu",
        type=str,
    )
    parser.add_argument(
        "--co_mix",
        default="concat",
        type=str,
    )
    parser.add_argument(
        "--bn_threshold",
        default=2e-5,
        type=float,
    )
    parser.add_argument(
        "--class_num",
        default=3,
        type=int,
    )
    parser.add_argument(
        "--dis_fac",
        default=0.1,
        type=float,
    )

    args, _ = parser.parse_known_args()

    return args